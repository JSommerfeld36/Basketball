library(readxl)
NonlinearVariable <- 'FullGameDFA' # Change the variable in the title to reflect what you are plotting
filepath <- 'C:/Users/jsommerfeld/Desktop/Corr Graphs/R Graphs/' # Add in file path where the figures will save here
Stats <- read_xlsx('C:/Users/jsommerfeld/Desktop/AllPlayerStats.xlsx'); # Loads the data
colnames <- colnames(Stats) #Stats.Properties.VariableNames; # Gets the columns names
nonlinear <- colnames(Stats[1,3:14]); # Nonlinear column names
box <- colnames(Stats[1,17:40]); # Box score column names
boxscores <- (Stats[,17:40]);
loop.vector<-(1:length(box))
k = paste(filepath, NonlinearVariable, sep = "")
for (i in loop.vector) { #dont forget to add back in the for loop
x <- nonlinear[1] # Change this number depending on the variable that you want to plot on the x axis
#j = 1:length(box)
y <- box[i]
# R squared values
tmp <- cor(Stats[x], boxscores[i], method = c());
r2 <- tmp^2; # Value that is displayed on graph
# Creates a PDF to save the graphs in
k = paste(filepath, NonlinearVariable, sep = "")
pdf(paste(k, ".pdf", sep = ""))
pvar = data.frame(Stats[x], boxscores[i])
regline = lm(pvar[,1] ~ pvar[,2], pvar)
plot(pvar, xlab=(x), ylab=(y))
abline(regline)
# Plot the graphs
# Oh well I plot(Stats[x],boxscores[i], cex = 1.3,
# xlab=(x), ylab=(y), abline(lm(x ~ y)))#'MarkerSize', 12
str <-paste('r^2= ',(r2[1,1])) # Converts value to a string
limits = par("usr")
T <- text(0.825, 130, str); # Finds the limits of the window
#set(T, 'fontsize', 14)#,'verticalalignment', 'top', 'horizontalalignment', 'left'); # Places the R^2 value in the top left corner
}
dev.off()
for (i in loop.vector) { #dont forget to add back in the for loop
x <- nonlinear[1] # Change this number depending on the variable that you want to plot on the x axis
#j = 1:length(box)
y <- box[i]
# R squared values
tmp <- cor(Stats[x], boxscores[i], method = c());
r2 <- tmp^2; # Value that is displayed on graph
# Creates a PDF to save the graphs in
k = paste(filepath, NonlinearVariable, sep = "")
pdf(paste(k, ".pdf", sep = ""))
pvar = data.frame(Stats[x], boxscores[i])
regline = lm(pvar[,1] ~ pvar[,2], pvar)
plot(pvar, xlab=(x), ylab=(y))
abline(regline)
# Plot the graphs
# Oh well I plot(Stats[x],boxscores[i], cex = 1.3,
# xlab=(x), ylab=(y), abline(lm(x ~ y)))#'MarkerSize', 12
str <-paste('r^2= ',(r2[1,1])) # Converts value to a string
limits = par("usr")
T <- text(0.825, 130, str); # Finds the limits of the window
#set(T, 'fontsize', 14)#,'verticalalignment', 'top', 'horizontalalignment', 'left'); # Places the R^2 value in the top left corner
dev.off()
}
colnames <- colnames(Stats) #Stats.Properties.VariableNames; # Gets the columns names
library(readxl)
library(readxl)
source('C:/Users/jsommerfeld/Desktop/Basketball/CorrelationGraphsInR_JS.R')
library(readxl)
NBA_Stats <- read_excel("~/Desktop/Basketball/NBA_2019-2020_Stats.xlsx")
NBA_Stats <- read_excel("C:/Users/jsommerfeld/Desktop/Basketball/NBA_2019-2020_Stats.xlsx")
Stats <- read_excel("Downloads/AllPlayerStats.xlsx")
Stats <- read_excel("C:/Users/jsommerfeld/Downloads/AllPlayerStats.xlsx")
